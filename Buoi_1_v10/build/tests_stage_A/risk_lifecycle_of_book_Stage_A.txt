

üß® Tr∆∞·ªùng h·ª£p b·∫°n vi·∫øt:
Book* create_book(int id, const char* title, const char* author) {
    Book* b = (Book*)malloc(sizeof(Book));  // c·∫•p ph√°t ƒë·ªông
    if (!b) return NULL;

    b->id = id;
    strcpy(b->title, title);
    strcpy(b->author, author);
    b->is_deleted = false;

    return b;
}


üìä S∆† ƒê·ªí RAM (Khi create_book() ƒëang ch·∫°y)
+-----------------------------+  ‚Üê Stack cao
| Return address              |
| Previous frame pointer      |
|-----------------------------|
| create_book() stack frame   |
|-----------------------------|
| id (int)                    |
| title (char*)               | ‚Üí tr·ªè v√†o Flash (chu·ªói h·∫±ng)
| author (char*)              | ‚Üí tr·ªè v√†o Flash (chu·ªói h·∫±ng)
| b (Book*)                   | ‚Üí tr·ªè v√†o Heap !!!
+-----------------------------+
       ...
       ...
+=============================+
| Global/static memory        |
|-----------------------------|
| library.books[] (0 KB)      | ‚ùå Kh√¥ng d√πng
| timeline[] (0 KB)           |
+=============================+
| .bss/.data (bi·∫øn to√†n c·ª•c)  |
+-----------------------------+
| Heap (malloc zone)          | ‚Üê D·ªØ li·ªáu Book* b ƒë∆∞·ª£c c·∫•p ph√°t ·ªü ƒë√¢y
|-----------------------------|
| Book                        |
|  - id                       |
|  - title[100]               |
|  - author[100]              |
|  - is_deleted               |
+-----------------------------+
| Heap grows upward ‚¨Ü         |
+-----------------------------+

‚ùå R·ª¶I RO (n·∫øu b·∫°n d√πng malloc() sai c√°ch)

| R·ªßi ro                                     | Gi·∫£i th√≠ch                                                                                                    |
| ------------------------------------------ | ------------------------------------------------------------------------------------------------------------- |
| **1. Kh√¥ng c√≥ `free()`**                   | N·∫øu b·∫°n kh√¥ng `free()` sau khi d√πng, b·∫°n b·ªã **r√≤ r·ªâ b·ªô nh·ªõ (memory leak)**.                                   |
| **2. Heap nh·ªè**                            | STM32F103C8T6 ch·ªâ c√≥ 20 KB RAM ‚Üí Heap th∆∞·ªùng ch·ªâ c√≥ v√†i KB (n·∫øu c√≥)                                           |
| **3. G√¢y treo h·ªá th·ªëng**                   | Khi RAM b·ªã c·∫°n v√¨ `malloc()` li√™n t·ª•c, ch∆∞∆°ng tr√¨nh c√≥ th·ªÉ **crash ho·∫∑c treo**.                               |
| **4. Kh√≥ debug tr√™n nh√∫ng**                | Kh√¥ng c√≥ h·ªá th·ªëng qu·∫£n l√Ω heap nh∆∞ tr√™n PC, malloc d·ªÖ g√¢y **h√†nh vi undefined** n·∫øu b·∫°n kh√¥ng ki·ªÉm so√°t ƒë∆∞·ª£c. |
| **5. Kh√¥ng x√°c ƒë·ªãnh v·ªã tr√≠ d·ªØ li·ªáu**       | D·ªØ li·ªáu ph√¢n t√°n kh√≥ qu·∫£n l√Ω ‚Üí kh√¥ng t·ªëi ∆∞u cache ho·∫∑c DMA.                                                   |
| **6. RTOS ho·∫∑c ISR kh√¥ng n√™n d√πng malloc** | Trong h·ªá th·ªëng th·ªùi gian th·ª±c (Real-Time), malloc khi·∫øn h·ªá th·ªëng kh√¥ng c√≤n "real-time" n·ªØa.                   |


‚úÖ V·∫≠y c√°ch ƒë√∫ng l√† g√¨?
Kh√¥ng d√πng malloc() n·∫øu kh√¥ng b·∫Øt bu·ªôc

Thay v√†o ƒë√≥ d√πng:

C·∫•u tr√∫c tƒ©nh nh∆∞ library.books[]

V√≤ng ƒë·ªùi d·ªØ li·ªáu x√°c ƒë·ªãnh r√µ (allocate once, use forever)

N·∫øu b·∫Øt bu·ªôc ph·∫£i d√πng malloc:

C·∫ßn c√≥ h√†m free()

C·∫ßn ki·ªÉm tra v√πng nh·ªõ c√≤n tr·ªëng


üéØ T√≥m t·∫Øt
| T√¨nh hu·ªëng        | D√πng t·ªët ·ªü ƒë√¢u?                               |
| ----------------- | --------------------------------------------- |
| D·ªØ li·ªáu tƒ©nh      | üü¢ STM32, nh√∫ng n√≥i chung                     |
| malloc + free     | üü° Tr√™n PC, ho·∫∑c h·ªá th·ªëng l·ªõn                 |
| malloc kh√¥ng free | üî¥ G√¢y r√≤ r·ªâ b·ªô nh·ªõ, r·∫•t nguy hi·ªÉm tr√™n STM32 |


‚úÖ ƒê√∫ng r·ªìi ‚Äî c√°c ƒë·ªëi t∆∞·ª£ng nh∆∞ User, Transaction, Timeline, Library c≈©ng n√™n theo mindset gi·ªëng nh∆∞ Book:

Kh√¥ng n√™n d√πng malloc()

N√™n d√πng m·∫£ng tƒ©nh ƒë√£ khai b√°o s·∫µn trong Library

Tr√°nh c·∫•p ph√°t ƒë·ªông n·∫øu kh√¥ng th·ª±c s·ª± c·∫ßn

V√≤ng ƒë·ªùi v√† v·ªã tr√≠ d·ªØ li·ªáu ph·∫£i r√µ r√†ng (d·ªÖ debug, t·ªëi ∆∞u RAM)

üëâ ƒê√¢y l√† chi·∫øn l∆∞·ª£c t·ªët nh·∫•t cho STM32 ho·∫∑c b·∫•t k·ª≥ h·ªá th·ªëng nh√∫ng RAM th·∫•p n√†o